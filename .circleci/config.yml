# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - run: # circleciのrubyのコンテナのbundlerのバージョンは古いのでupdateする
          name: bundle update
          command: |
            gem install bundler:2.0.2

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
  build_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          # AWS CLIのインストール
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          # AWS CLIを使用してECRにログイン
          name: login ecr
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          # Dockerイメージのビルド
          name: build image
          command: |
            docker build -t ${ECR_DOMAIN}:$CIRCLE_SHA1 -t ${ECR_DOMAIN}:latest .
      - run:
          # ビルドしたイメージをECRにpush
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}:latest
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition container-era-service | jq '.taskDefinition | { containerDefinitions: .containerDefinitions, family: .family, taskRoleArn: .taskRoleArn, networkMode: .networkMode, volumes: .volumes, placementConstraints: .placementConstraints }' > definition.json
            aws ecs register-task-definition --family container-era-service --cli-input-json file://definition.json
            aws ecs update-service --cluster container-era-ecs-cluster --service container-era-service --task-definition container-era-service

workflows:
  version: 2
  test:
    jobs:
      - build
      - build_image:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_image
          filters:
            branches:
              only: master
